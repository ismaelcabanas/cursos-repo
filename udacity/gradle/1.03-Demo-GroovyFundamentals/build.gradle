/*
Gradle build scripts are written in Groovy. Groovy is a language that runs on
the JVM that fills a hole for Java developers who need a scripting language.
It's terse, expressive, interoperates extremely well with Java, and has some
special features that make it ideally suited for creating domain specific
languages.

While we don't need to know a ton of Groovy to write Gradle build scripts, it
helps a lot to experiment a bit with the basics. Gradle provides its own
Groovy distribution, so we don't even need to install Groovy to get started.
We can just put our Groovy code in a build.gradle file, and then ask Gradle to
do anything that requires reading the build script.

We'll just declare a task called `groovy` that doesn't do anything. To run
this script, just ask Gradle to run the `groovy` task using

    $ gradle groovy

If you're using Sublime Text, you can turn on Groovy syntax coloring by
selecting View > Syntax > Open all with current extension as... > Groovy
*/

task groovy << {}

println "Hello Groovy!"

/*
Most valid Java is also valid Groovy, and we can interoperate with Java, as
well as access the standard library. Let's make a Java class.
*/

class JavaGreeter {
    public void sayHello() {
        System.out.println("Hello Java!");
    }
}

JavaGreeter greeter = new JavaGreeter()
greeter.sayHello()
